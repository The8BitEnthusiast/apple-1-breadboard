MEMORY {
  ZP:		start = $0000, size = $0100, type = rw;
  INPUT_BUFFER: start = $0300, size = $0100, type = rw, file = "";
  BASROM:		start = $8000, size = $4400, fill = yes, file = %O;
  APPLE2_MON:   start = $C400, size = $3A00, fill = yes, file = %O;
  WOZMON:   start = $FE00, size = $1FA, fill = yes, file = %O;
  RESETVEC: start = $FFFA, size = 6, fill = yes, file = %O;
  DUMMY:		start = $0000, size = $00FF, file = "";
}

SEGMENTS {
  ZEROPAGE:	load = ZP, type = zp;
  INPUT_BUFFER: load = INPUT_BUFFER, type = rw;
  HEADER:		load = BASROM,	type = ro;
  VECTORS:	load = BASROM,	type = ro;
  KEYWORDS:	load = BASROM,	type = ro;
  ERROR:		load = BASROM,	type = ro;
  CODE:		load = BASROM,	type = ro;
  CHRGET:		load = BASROM,	type = ro;
  INIT:		load = BASROM,	type = ro;
  EXTRA:		load = BASROM,	type = ro;
  DUMMY:		load = DUMMY; # don't include

  BIOS: load = BASROM, type = ro;
  APPLE2_MON: load = APPLE2_MON, type = ro;
  WOZMON: load = WOZMON, type = ro;
  RESETVEC: load = RESETVEC, type = ro;
}

